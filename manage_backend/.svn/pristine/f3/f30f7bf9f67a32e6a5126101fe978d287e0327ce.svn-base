<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hoolai.manage.model.Users" >
  <resultMap id="BaseResultMap" type="com.hoolai.manage.model.Users" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="department" property="department" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="telepone" property="telepone" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="VARCHAR" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="login_error_times" property="loginErrorTimes" jdbcType="VARCHAR" />
    <result column="user_bi_id" property="userBiId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, login_name, password, sex, department, email, telepone, create_date, last_login_time, 
    update_date,real_name,user_bi_id,login_error_times,status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_bi_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_bi_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hoolai.manage.model.Users" >
    insert into t_bi_user (id, login_name, password, 
      sex, department, email, 
      telepone, create_date, last_login_time, 
      update_date,real_name,user_bi_id,login_error_times,status)
    values (#{id,jdbcType=BIGINT}, #{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{department,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{telepone,jdbcType=VARCHAR}, #{createDate,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{userBiId,jdbcType=VARCHAR},
      #{loginErrorTimes,jdbcType=INTEGER},#{status,jdbcType=INTEGER})
       <selectKey resultType="long" keyProperty="id">
		<![CDATA[select @@IDENTITY AS id]]>
		</selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.hoolai.manage.model.Users" >
    insert into t_bi_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="telepone != null" >
        telepone,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="userBiId != null" >
        user_bi_id,
      </if>
      <if test="loginErrorTimes != null" >
        login_error_times,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="department != null" >
        #{department,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="telepone != null" >
        #{telepone,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="userBiId != null" >
        #{userBiId,jdbcType=VARCHAR},
      </if>
      <if test="loginErrorTimes != null" >
        #{loginErrorTimes,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
     <selectKey resultType="long" keyProperty="id">
		<![CDATA[select @@IDENTITY AS id]]>
		</selectKey>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hoolai.manage.model.Users" >
    update t_bi_user
    <set >
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=INTEGER},
      </if>
      <if test="telepone != null" >
        telepone = #{telepone,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="userBiId != null" >
        user_bi_id = #{userBiId,jdbcType=VARCHAR},
      </if>
      <if test="loginErrorTimes != null" >
        login_error_times = #{loginErrorTimes,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hoolai.manage.model.Users" >
    update t_bi_user
    set login_name = #{loginName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      department = #{department,jdbcType=INTEGER},
      telepone = #{telepone,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      user_bi_id = #{userBiId,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=VARCHAR},
      login_error_times = #{loginErrorTimes,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="getUsersByloginName" resultMap="BaseResultMap" parameterType="com.hoolai.manage.vo.UsersVO" >
       select 
    <include refid="Base_Column_List" />
       from t_bi_user u
      <if test="_parameter != null">
			<include refid="Vo_Where_Clause" />
		</if>
		 <![CDATA[ limit 0, 1 ]]>
  </select>
  
  <sql id="Vo_Where_Clause">
		<where>
			<if test="entity!=null">
				<if test="entity.id != null ">
					 <![CDATA[ and u.id = #{entity.id} ]]>
				</if>
				<if test="entity.loginName != null and entity.loginName != ''">
					 <![CDATA[ and u.login_name = #{entity.loginName} ]]>
				</if>
				<if test="groups != null ">
				   <if test="groups.id != null and groups.id != -1">
				       <![CDATA[ and gu.group_id = #{groups.id} ]]>
				   </if>
				   <if test="groups.id != null and groups.id == -1">
				       <![CDATA[ and gu.group_id is null ]]>
				   </if>
				</if>
			</if>
		</where>
	</sql>
	
	<select id="selectOne" parameterType="com.hoolai.manage.vo.UsersVO"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_bi_user u
		<if test="_parameter != null">
			<include refid="Vo_Where_Clause" />
		</if>
		 <![CDATA[ limit 0, 1 ]]>
	</select>
	
	  <select id="selectCount" parameterType="com.hoolai.manage.vo.UsersVO"
		resultType="java.lang.Long">
		select 
		<if test="groups!=null">
		  count(*)
		  from t_bi_user u left join group_users gu on u.id = gu.user_id 
		</if>
		<if test="groups==null">
		  count(*)
		  from t_bi_user u
		</if>
		<if test="_parameter != null">
			<include refid="Vo_Where_Clause" />
		</if>
	</select>

	<select id="selectList" parameterType="com.hoolai.manage.vo.UsersVO"
		resultMap="BaseResultMap">
		select
		<if test="groups!=null">
		  u.* 
		  from t_bi_user u left join group_users gu on u.id = gu.user_id 
		</if>
		<if test="groups==null">
		  <include refid="Base_Column_List" />
		  from t_bi_user u
		</if>
		<if test="_parameter != null">
			<include refid="Vo_Where_Clause" />
		</if>
		<![CDATA[ order by id asc limit #{offset}, #{rows} ]]>
	</select>
	
	<select id="selectList4Source" parameterType="com.hoolai.manage.vo.UsersVO" resultMap="BaseResultMap">
		select u.* from
		(select * from group_users where group_id=#{groups.id})gu
		left join
		(select * from t_bi_user
		 <where>
			<if test="entity!=null">
				<if test="entity.loginName != null and entity.loginName != ''">
					 <![CDATA[ and login_name = #{entity.loginName} ]]>
				</if>
				<if test="entity.email != null and entity.email != ''">
					 <![CDATA[ and email = #{entity.email} ]]>
				</if>
			</if>
		</where>
		)u
		on u.id = gu.user_id 
		left join
		(select * from user_game where game_id = #{gamesId})ug
		on gu.user_id=ug.user_id
		where ug.user_id is not null
	</select>
</mapper>