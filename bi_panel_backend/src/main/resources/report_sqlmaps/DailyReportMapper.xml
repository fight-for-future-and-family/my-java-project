<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hoolai.bi.report.model.entity.DailyReport" >
  <resultMap id="BaseResultMap" type="com.hoolai.bi.report.model.entity.DailyReport" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="snid" property="snid" jdbcType="VARCHAR" />
    <result column="gameid" property="gameid" jdbcType="VARCHAR" />
    <result column="payment_amount" property="paymentAmount" jdbcType="DOUBLE" />
    <result column="dau" property="dau" jdbcType="INTEGER" />
    <result column="new_equip" property="newEquip" jdbcType="INTEGER" />
    <result column="role_choice" property="roleChoice" jdbcType="INTEGER" />
    <result column="install" property="install" jdbcType="INTEGER" />
    <result column="dnu" property="dnu" jdbcType="INTEGER" />
    <result column="arpu" property="arpu" jdbcType="DOUBLE" />
    <result column="arppu" property="arppu" jdbcType="DOUBLE" />
    <result column="pu" property="pu" jdbcType="INTEGER" />
    <result column="payment_cnt" property="paymentCnt" jdbcType="INTEGER" />
    <result column="pay_rate" property="payRate" jdbcType="REAL" />
    <result column="roll_users" property="rollUsers" jdbcType="INTEGER" />
    <result column="roll_pay_users" property="rollPayUsers" jdbcType="INTEGER" />
    <result column="roll_amount" property="rollAmount" jdbcType="DOUBLE" />
    <result column="new_pu" property="newPu" jdbcType="INTEGER" />
    <result column="new_pay_amount" property="newPayAmount" jdbcType="DOUBLE" />
    <result column="install_pu" property="installPu" jdbcType="INTEGER" />
    <result column="install_pay_amount" property="installPayAmount" jdbcType="DOUBLE" />
    <result column="acu" property="acu" jdbcType="DOUBLE" />
    <result column="avg_user_time" property="avgUserTime" jdbcType="INTEGER" />
    <result column="pcu" property="pcu" jdbcType="DOUBLE" />
    <result column="day" property="day" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, snid, gameid, payment_amount, dau, role_choice,install, dnu, arpu, arppu, pu, payment_cnt, 
    pay_rate, roll_users, roll_pay_users, roll_amount, new_pu, new_pay_amount, install_pu, 
    install_pay_amount, acu, avg_user_time, pcu, day, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from daily_report
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from daily_report
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hoolai.bi.report.model.entity.DailyReport" >
    insert into daily_report (id, snid, gameid, 
      payment_amount, dau, roleChoice,install, 
      dnu, arpu, arppu, pu, 
      payment_cnt, pay_rate, roll_users, 
      roll_pay_users, roll_amount, new_pu, 
      new_pay_amount, install_pu, install_pay_amount, 
      acu, avg_user_time, pcu, 
      day, create_time)
    values (#{id,jdbcType=BIGINT}, #{snid,jdbcType=VARCHAR}, #{gameid,jdbcType=VARCHAR}, 
      #{paymentAmount,jdbcType=DOUBLE}, #{dau,jdbcType=INTEGER},#{role_choice,jdbcType=INTEGER}, #{install,jdbcType=INTEGER}, 
      #{dnu,jdbcType=INTEGER}, #{arpu,jdbcType=DOUBLE}, #{arppu,jdbcType=DOUBLE}, #{pu,jdbcType=INTEGER}, 
      #{paymentCnt,jdbcType=INTEGER}, #{payRate,jdbcType=REAL}, #{rollUsers,jdbcType=INTEGER}, 
      #{rollPayUsers,jdbcType=INTEGER}, #{rollAmount,jdbcType=DOUBLE}, #{newPu,jdbcType=INTEGER}, 
      #{newPayAmount,jdbcType=DOUBLE}, #{installPu,jdbcType=INTEGER}, #{installPayAmount,jdbcType=DOUBLE}, 
      #{acu,jdbcType=DOUBLE}, #{avgUserTime,jdbcType=INTEGER}, #{pcu,jdbcType=DOUBLE}, 
      #{day,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hoolai.bi.report.model.entity.DailyReport" >
    insert into daily_report
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="snid != null" >
        snid,
      </if>
      <if test="gameid != null" >
        gameid,
      </if>
      <if test="paymentAmount != null" >
        payment_amount,
      </if>
      <if test="dau != null" >
        dau,
      </if>
      <if test="roleChoice != null" >
        role_choice,
      </if>
      <if test="install != null" >
        install,
      </if>
      <if test="dnu != null" >
        dnu,
      </if>
      <if test="arpu != null" >
        arpu,
      </if>
      <if test="arppu != null" >
        arppu,
      </if>
      <if test="pu != null" >
        pu,
      </if>
      <if test="paymentCnt != null" >
        payment_cnt,
      </if>
      <if test="payRate != null" >
        pay_rate,
      </if>
      <if test="rollUsers != null" >
        roll_users,
      </if>
      <if test="rollPayUsers != null" >
        roll_pay_users,
      </if>
      <if test="rollAmount != null" >
        roll_amount,
      </if>
      <if test="newPu != null" >
        new_pu,
      </if>
      <if test="newPayAmount != null" >
        new_pay_amount,
      </if>
      <if test="installPu != null" >
        install_pu,
      </if>
      <if test="installPayAmount != null" >
        install_pay_amount,
      </if>
      <if test="acu != null" >
        acu,
      </if>
      <if test="avgUserTime != null" >
        avg_user_time,
      </if>
      <if test="pcu != null" >
        pcu,
      </if>
      <if test="day != null" >
        day,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="snid != null" >
        #{snid,jdbcType=VARCHAR},
      </if>
      <if test="gameid != null" >
        #{gameid,jdbcType=VARCHAR},
      </if>
      <if test="paymentAmount != null" >
        #{paymentAmount,jdbcType=DOUBLE},
      </if>
      <if test="dau != null" >
        #{dau,jdbcType=INTEGER},
      </if>
      <if test="roleChoice != null" >
        #{role_choice,jdbcType=INTEGER},
      </if>
      <if test="install != null" >
        #{install,jdbcType=INTEGER},
      </if>
      <if test="dnu != null" >
        #{dnu,jdbcType=INTEGER},
      </if>
      <if test="arpu != null" >
        #{arpu,jdbcType=DOUBLE},
      </if>
      <if test="arppu != null" >
        #{arppu,jdbcType=DOUBLE},
      </if>
      <if test="pu != null" >
        #{pu,jdbcType=INTEGER},
      </if>
      <if test="paymentCnt != null" >
        #{paymentCnt,jdbcType=INTEGER},
      </if>
      <if test="payRate != null" >
        #{payRate,jdbcType=REAL},
      </if>
      <if test="rollUsers != null" >
        #{rollUsers,jdbcType=INTEGER},
      </if>
      <if test="rollPayUsers != null" >
        #{rollPayUsers,jdbcType=INTEGER},
      </if>
      <if test="rollAmount != null" >
        #{rollAmount,jdbcType=DOUBLE},
      </if>
      <if test="newPu != null" >
        #{newPu,jdbcType=INTEGER},
      </if>
      <if test="newPayAmount != null" >
        #{newPayAmount,jdbcType=DOUBLE},
      </if>
      <if test="installPu != null" >
        #{installPu,jdbcType=INTEGER},
      </if>
      <if test="installPayAmount != null" >
        #{installPayAmount,jdbcType=DOUBLE},
      </if>
      <if test="acu != null" >
        #{acu,jdbcType=DOUBLE},
      </if>
      <if test="avgUserTime != null" >
        #{avgUserTime,jdbcType=INTEGER},
      </if>
      <if test="pcu != null" >
        #{pcu,jdbcType=DOUBLE},
      </if>
      <if test="day != null" >
        #{day,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hoolai.bi.report.model.entity.DailyReport" >
    update daily_report
    <set >
      <if test="snid != null" >
        snid = #{snid,jdbcType=VARCHAR},
      </if>
      <if test="gameid != null" >
        gameid = #{gameid,jdbcType=VARCHAR},
      </if>
      <if test="paymentAmount != null" >
        payment_amount = #{paymentAmount,jdbcType=DOUBLE},
      </if>
      <if test="dau != null" >
        dau = #{dau,jdbcType=INTEGER},
      </if>
      <if test="roleChoice != null" >
        role_choice = #{roleChoice,jdbcType=INTEGER},
      </if>
      <if test="install != null" >
        install = #{install,jdbcType=INTEGER},
      </if>
      <if test="dnu != null" >
        dnu = #{dnu,jdbcType=INTEGER},
      </if>
      <if test="arpu != null" >
        arpu = #{arpu,jdbcType=DOUBLE},
      </if>
      <if test="arppu != null" >
        arppu = #{arppu,jdbcType=DOUBLE},
      </if>
      <if test="pu != null" >
        pu = #{pu,jdbcType=INTEGER},
      </if>
      <if test="paymentCnt != null" >
        payment_cnt = #{paymentCnt,jdbcType=INTEGER},
      </if>
      <if test="payRate != null" >
        pay_rate = #{payRate,jdbcType=REAL},
      </if>
      <if test="rollUsers != null" >
        roll_users = #{rollUsers,jdbcType=INTEGER},
      </if>
      <if test="rollPayUsers != null" >
        roll_pay_users = #{rollPayUsers,jdbcType=INTEGER},
      </if>
      <if test="rollAmount != null" >
        roll_amount = #{rollAmount,jdbcType=DOUBLE},
      </if>
      <if test="newPu != null" >
        new_pu = #{newPu,jdbcType=INTEGER},
      </if>
      <if test="newPayAmount != null" >
        new_pay_amount = #{newPayAmount,jdbcType=DOUBLE},
      </if>
      <if test="installPu != null" >
        install_pu = #{installPu,jdbcType=INTEGER},
      </if>
      <if test="installPayAmount != null" >
        install_pay_amount = #{installPayAmount,jdbcType=DOUBLE},
      </if>
      <if test="acu != null" >
        acu = #{acu,jdbcType=DOUBLE},
      </if>
      <if test="avgUserTime != null" >
        avg_user_time = #{avgUserTime,jdbcType=INTEGER},
      </if>
      <if test="pcu != null" >
        pcu = #{pcu,jdbcType=DOUBLE},
      </if>
      <if test="day != null" >
        day = #{day,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hoolai.bi.report.model.entity.DailyReport" >
    update daily_report
    set snid = #{snid,jdbcType=VARCHAR},
      gameid = #{gameid,jdbcType=VARCHAR},
      payment_amount = #{paymentAmount,jdbcType=DOUBLE},
      dau = #{dau,jdbcType=INTEGER},
      role_choice = #{roleChoice,jdbcType=INTEGER},
      install = #{install,jdbcType=INTEGER},
      dnu = #{dnu,jdbcType=INTEGER},
      arpu = #{arpu,jdbcType=DOUBLE},
      arppu = #{arppu,jdbcType=DOUBLE},
      pu = #{pu,jdbcType=INTEGER},
      payment_cnt = #{paymentCnt,jdbcType=INTEGER},
      pay_rate = #{payRate,jdbcType=REAL},
      roll_users = #{rollUsers,jdbcType=INTEGER},
      roll_pay_users = #{rollPayUsers,jdbcType=INTEGER},
      roll_amount = #{rollAmount,jdbcType=DOUBLE},
      new_pu = #{newPu,jdbcType=INTEGER},
      new_pay_amount = #{newPayAmount,jdbcType=DOUBLE},
      install_pu = #{installPu,jdbcType=INTEGER},
      install_pay_amount = #{installPayAmount,jdbcType=DOUBLE},
      acu = #{acu,jdbcType=DOUBLE},
      avg_user_time = #{avgUserTime,jdbcType=INTEGER},
      pcu = #{pcu,jdbcType=DOUBLE},
      day = #{day,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <sql id="Vo_Where_Clause">
		<where>
			<if test="entity!=null">
				<if test="entity.id != null ">
					 <![CDATA[ and id = #{entity.id} ]]>
				</if>
				<if test="entity.snid != null and entity.snid != ''">
					 <![CDATA[ and snid = #{entity.snid} ]]>
				</if>
				<if test="entity.gameid != null and entity.gameid != ''">
					 <![CDATA[ and gameid = #{entity.gameid} ]]>
				</if>
				<if test="beginDate != null">
					 <![CDATA[ and day >= #{beginDate} ]]>
				</if>
				<if test="endDate != null">
					 <![CDATA[ and day <= #{endDate} ]]>
				</if>
			</if>
		</where>
	</sql>
  
  <select id="selectMatchList" parameterType="com.hoolai.bi.report.vo.DailyReportVO" resultMap="BaseResultMap">
     select 
     <include refid="Base_Column_List" />
     from daily_report
     <if test="_parameter != null">
			<include refid="Vo_Where_Clause" />
		</if>
  </select>
  
	<select id="selectDailyDownloadAllList" parameterType="com.hoolai.bi.report.vo.DailyReportVO" resultMap="BaseResultMap">
		select * from (
			select 
			<include refid="Base_Column_List" />
			from daily_report
			<if test="_parameter != null">
				<include refid="Vo_Where_Clause" />
			</if>
		) a left outer join (
			select t1.*,ltv0,ltv1,ltv7
			from ( select day,dau-dnu as dailyOldUser,
				payment_amount-install_pay_amount as oldPayment,
				pu-install_pu as oldPayer,
				(payment_amount-install_pay_amount)/(dau-dnu) as oldArpu,
				(payment_amount-install_pay_amount)/(pu-install_pu ) as oldArppu
				FROM daily_report
				<if test="_parameter != null">
					<include refid="Vo_Where_Clause" />
				</if>
			)t1 LEFT OUTER JOIN (
				SELECT  install_day,
				SUM(CASE WHEN retention_day=0 THEN total_amount/INSTALL END) AS ltv0,
				SUM(CASE WHEN retention_day=1 THEN total_amount/INSTALL END) AS ltv1,
				SUM(CASE WHEN retention_day=7 THEN total_amount/INSTALL END) AS ltv7
				FROM user_retention_ltv
				where 
				snid=#{entity.snid} and gameid=#{entity.gameid} 
				and install_day >= #{beginDate} 
				<![CDATA[ 
				and install_day <= #{endDate}
				]]>
				and retention_day in (0,1,7)
				group by install_day
			)t2
			on t1.day=t2.install_day
			order by t1.day
		) b on a.day=b.day
	</select>
  
   <select id="selectSumMatchJoin" parameterType="com.hoolai.bi.report.vo.DailyReportVO" resultMap="BaseResultMap">
   		SELECT SUM(dnu)AS dnu,SUM(new_equip)AS new_equip,SUM(role_choice)AS role_choice,SUM(dau)AS dau,SUM(payment_amount)AS payment_amount,
		 SUM(pu)AS pu,SUM(new_pay_amount)AS new_pay_amount,SUM(new_pu)AS new_pu,SUM(install_pay_amount)AS install_pay_amount,SUM(install_pu)AS install_pu,
		 SUM(roll_amount)AS roll_amount,SUM(roll_pay_users)AS roll_pay_users,SUM(roll_users)AS roll_users,SUM(pcu)AS pcu,SUM(acu)AS acu,
		 SUM(avg_user_time)AS avg_user_time,SUM(arpu)AS arpu,SUM(arppu)AS arppu,SUM(payment_cnt)AS payment_cnt,SUM(pay_rate)AS pay_rate FROM (
	   		select  a.snid as snid , a.gameid as gameid , payment_amount, a.dau as dau, 
		    case when b.new_equip is null then 0 else b.new_equip end as new_equip, 
		    role_choice,
		 a.install as install, dnu, arpu, arppu, pu, payment_cnt, 
		    pay_rate, roll_users, roll_pay_users, roll_amount, new_pu, a.new_pay_amount as new_pay_amount, install_pu, 
		    a.install_pay_amount, acu, avg_user_time, pcu, day,a.create_time
			from 
			
			(select snid,gameid,payment_amount,dau,role_choice,install,dnu,arpu,arppu,pu,payment_cnt,
			pay_rate,roll_users,roll_pay_users,roll_amount,new_pu,new_pay_amount,install_pu,
			install_pay_amount,acu,avg_user_time,pcu,day,create_time 
			from  daily_report where 1=1 
			<if test="entity!=null">
						<if test="entity.id != null ">
							 <![CDATA[ and id = #{entity.id} ]]>
						</if>
						<if test="entity.snid != null and entity.snid != ''">
							 <![CDATA[ and snid = #{entity.snid} ]]>
						</if>
						<if test="entity.gameid != null and entity.gameid != ''">
							 <![CDATA[ and gameid = #{entity.gameid} ]]>
						</if>
						<if test="beginDate != null">
							 <![CDATA[ and day >= #{beginDate} ]]>
						</if>
						<if test="endDate != null">
							 <![CDATA[ and day <= #{endDate} ]]>
						</if>
					</if>
			)a 
			left join 
			(select snid,gameid ,ds,new_equip from equip_day  where 1=1 
			<if test="entity!=null">
						
						<if test="entity.snid != null and entity.snid != ''">
							 <![CDATA[ and snid = #{entity.snid} ]]>
						</if>
						<if test="entity.gameid != null and entity.gameid != ''">
							 <![CDATA[ and gameid = #{entity.gameid} ]]>
						</if>
						<if test="beginDate != null">
							 <![CDATA[ and ds >= #{beginDate} ]]>
						</if>
						<if test="endDate != null">
							 <![CDATA[ and ds <= #{endDate} ]]>
						</if>
					</if>
			
			)b on a.snid=b.snid and a.gameid=b.gameid and a.day = b.ds) t
   </select >
  
   <select id="selectMatchJoin" parameterType="com.hoolai.bi.report.vo.DailyReportVO" resultMap="BaseResultMap">
    select  a.snid as snid , a.gameid as gameid , payment_amount, a.dau as dau, 
    case when b.new_equip is null then 0 else b.new_equip end as new_equip, 
    role_choice,
 a.install as install, dnu, arpu, arppu, pu, payment_cnt, 
    pay_rate, roll_users, roll_pay_users, roll_amount, new_pu, a.new_pay_amount as new_pay_amount, install_pu, 
    a.install_pay_amount, acu, avg_user_time, pcu, day,a.create_time
	from 
	
	(select snid,gameid,payment_amount,dau,role_choice,install,dnu,arpu,arppu,pu,payment_cnt,
	pay_rate,roll_users,roll_pay_users,roll_amount,new_pu,new_pay_amount,install_pu,
	install_pay_amount,acu,avg_user_time,pcu,day,create_time 
	from  daily_report where 1=1 
	<if test="entity!=null">
				<if test="entity.id != null ">
					 <![CDATA[ and id = #{entity.id} ]]>
				</if>
				<if test="entity.snid != null and entity.snid != ''">
					 <![CDATA[ and snid = #{entity.snid} ]]>
				</if>
				<if test="entity.gameid != null and entity.gameid != ''">
					 <![CDATA[ and gameid = #{entity.gameid} ]]>
				</if>
				<if test="beginDate != null">
					 <![CDATA[ and day >= #{beginDate} ]]>
				</if>
				<if test="endDate != null">
					 <![CDATA[ and day <= #{endDate} ]]>
				</if>
			</if>
	)a 
	left join 
	(select snid,gameid ,ds,new_equip from equip_day  where 1=1 
	<if test="entity!=null">
				
				<if test="entity.snid != null and entity.snid != ''">
					 <![CDATA[ and snid = #{entity.snid} ]]>
				</if>
				<if test="entity.gameid != null and entity.gameid != ''">
					 <![CDATA[ and gameid = #{entity.gameid} ]]>
				</if>
				<if test="beginDate != null">
					 <![CDATA[ and ds >= #{beginDate} ]]>
				</if>
				<if test="endDate != null">
					 <![CDATA[ and ds <= #{endDate} ]]>
				</if>
			</if>
	
	)b on a.snid=b.snid and a.gameid=b.gameid and a.day = b.ds 
  </select>
  
  <select id="selectDailyReport4Auth" parameterType="com.hoolai.bi.report.vo.DailyReportVO" resultMap="BaseResultMap">
       select 
     <include refid="Base_Column_List" />
     from daily_report
     where day = #{yesterday}
     <if test="_parameter != null">
       and 
     <foreach collection="entities" open="(" close=")" separator=" or "  item="dr">
         (snid=#{dr.snid} and gameid=#{dr.gameid})
     </foreach> 
      </if>
  </select>
  
  <select id="selectDailyReport" parameterType="com.hoolai.bi.report.vo.DailyReportVO" resultMap="BaseResultMap">
  		<!-- SELECT CASE WHEN payment_amount IS NULL THEN 0 ELSE payment_amount END AS payment_amount FROM (
	  		select sum(payment_amount) as payment_amount
	  		from daily_report
	     	<![CDATA[   where day <= #{yesterday} ]]>
	     	and day >= #{onlineDate}
		    <if test="_parameter != null">
		      and 
		    <foreach collection="entities" open="(" close=")" separator=" or "  item="dr">
		        (snid=#{dr.snid} and gameid=#{dr.gameid})
		    </foreach> 
		    </if>
		)a -->
		SELECT CASE WHEN payment_amount IS NULL THEN 0 ELSE payment_amount END AS payment_amount FROM (
			select sum(payment_amount) as payment_amount from (
				select a.payment_amount/b.rate as payment_amount from (
					select snid,gameid,payment_amount from daily_report
					where day >= #{onlineDate}
					<![CDATA[ and day <= #{yesterday} ]]>
					<if test="_parameter != null">
						and
						<foreach collection="entities"  open="(" close=")" separator=" or "  item="dr">
							(snid=#{dr.snid} and gameid=#{dr.gameid})
						</foreach>
					</if>
				)a left outer join(
					select snid,gameid,rate from games where 1=1
					<if test="_parameter != null">
						and
						<foreach collection="entities"  open="(" close=")" separator=" or "  item="dr">
							(snid=#{dr.snid} and gameid=#{dr.gameid})
						</foreach>
					</if>
				)b on a.snid=b.snid and a.gameid=b.gameid
			)c
		)d
		<!--  SELECT a.payment_amount/b.rate FROM (
		SELECT snid,gameid,payment_amount FROM daily_report WHERE DAY='2016-09-21' AND ((snid=11 AND gameid=147) OR (snid=11 AND gameid=125))
		)a LEFT OUTER JOIN(
		SELECT snid,gameid,rate FROM games WHERE 1=1 AND ((snid=11 AND gameid=147) OR (snid=11 AND gameid=125))
		)b ON a.snid=b.snid AND a.gameid=b.gameid -->
  </select>
  
  
   <resultMap id="PredictionResultMap" type="com.hoolai.bi.report.model.entity.GamePrediction" >
    <result column="snid" property="snid" jdbcType="VARCHAR" />
    <result column="gameid" property="gameid" jdbcType="VARCHAR" />
    <result column="avg_payment_amount" property="avgPayment" jdbcType="DOUBLE" />
    <result column="avg_dau" property="avgDau" jdbcType="DOUBLE" />
    <result column="avg_dnu" property="avgDnu" jdbcType="DOUBLE" />
    <result column="avg_old_user" property="avgOldUser" jdbcType="DOUBLE" />
    <result column="avg_arpu" property="avgArpu" jdbcType="DOUBLE" />
    <result column="avg_arppu" property="avgArppu" jdbcType="DOUBLE" />
    <result column="avg_pay_rate" property="avgPayRate" jdbcType="DOUBLE" />
    <result column="avg_d1" property="avgD1" jdbcType="DOUBLE" />
    <result column="avg_old_user_loss_rate" property="avgOldUserLossRate" jdbcType="DOUBLE" />
    <result column="sum_payment_amount" property="sumPayment" jdbcType="DOUBLE" />
  </resultMap>
  
  <sql id="PredictionVo_Where_Clause_avg">
		<where>
			<if test="entity!=null">
				<if test="entity.snid != null and entity.snid != ''">
					 <![CDATA[ and snid = #{entity.snid} ]]>
				</if>
				<if test="entity.gameid != null and entity.gameid != ''">
					 <![CDATA[ and gameid = #{entity.gameid} ]]>
				</if>
			</if>
			<if test="monthBeginDate != null  and monthBeginDate != ''">
					 <![CDATA[ and day >= #{monthBeginDate} ]]>
				</if>
				<if test="monthendDate != null  and monthendDate != ''">
					 <![CDATA[ and day <= #{monthendDate} ]]>
				</if>
				<if test="avgBeginDate != null  and avgBeginDate != ''">
					 <![CDATA[ and day >= #{avgBeginDate} ]]>
				</if>
				<if test="avgEndDate != null and avgEndDate != ''">
					 <![CDATA[ and day <= #{avgEndDate} ]]>
				</if>
		</where>
	</sql>
	
  <sql id="PredictionVo_Where_Clause_sum">
		<where>
			<if test="entity!=null">
				<if test="entity.snid != null and entity.snid != ''">
					 <![CDATA[ and snid = #{entity.snid} ]]>
				</if>
				<if test="entity.gameid != null and entity.gameid != ''">
					 <![CDATA[ and gameid = #{entity.gameid} ]]>
				</if>
			</if>
			<if test="monthBeginDate != null  and monthBeginDate != ''">
					 <![CDATA[ and day >= #{monthBeginDate} ]]>
				</if>
				<if test="monthendDate != null  and monthendDate != ''">
					 <![CDATA[ and day <= #{monthendDate} ]]>
				</if>
		</where>
	</sql>
	
  <sql id="PredictionVo_Where_Clause_rate">
		<where>
			<if test="entity!=null">
				<if test="entity.snid != null and entity.snid != ''">
					 <![CDATA[ and snid = #{entity.snid} ]]>
				</if>
				<if test="entity.gameid != null and entity.gameid != ''">
					 <![CDATA[ and gameid = #{entity.gameid} ]]>
				</if>
			</if>
			<if test="avgBeginDate != null and avgBeginDate != ''">
				 <![CDATA[ and day >= DATE_SUB(#{avgBeginDate},INTERVAL 1 DAY)  ]]>
			</if>
			<if test="avgEndDate != null and avgEndDate != ''">
				 <![CDATA[ and day <= DATE_ADD(#{avgEndDate},INTERVAL 1 DAY) ]]>
			</if>
		</where>
	</sql>
	
  <sql id="PredictionVo_Where_Clause_ltv">
		<where>
			<if test="entity!=null">
				<if test="entity.snid != null and entity.snid != ''">
					 <![CDATA[ and snid = #{entity.snid} ]]>
				</if>
				<if test="entity.gameid != null and entity.gameid != ''">
					 <![CDATA[ and gameid = #{entity.gameid} ]]>
				</if>
			</if>
			<if test="avgBeginDate != null and avgBeginDate != ''">
				 <![CDATA[ and install_day >= DATE_SUB(#{avgBeginDate},INTERVAL 1 DAY)  ]]>
			</if>
			<if test="avgEndDate != null and avgEndDate != ''">
				 <![CDATA[ and install_day <= DATE_ADD(#{avgEndDate},INTERVAL 1 DAY) ]]>
			</if>
		</where>
	</sql>
  
  <select id="avg4Predict" parameterType="com.hoolai.bi.report.vo.GamePredictionVO" resultMap="PredictionResultMap">
      select avg(dnu) avg_dnu,avg(dau) avg_dau, avg(dau-dnu) avg_old_user, avg(arpu) avg_arpu,
             avg(arppu) avg_arppu,avg(pay_rate) avg_pay_rate,avg(payment_amount) avg_payment_amount
      from daily_report
      <if test="_parameter != null">
			<include refid="PredictionVo_Where_Clause_avg" />
	 </if>
  </select>
  
  <select id="sumPayAmount4Predict" parameterType="com.hoolai.bi.report.vo.GamePredictionVO" resultMap="PredictionResultMap">
      select sum(payment_amount) sum_payment_amount
      from daily_report
      <if test="_parameter != null">
			<include refid="PredictionVo_Where_Clause_sum" />
	 </if>
  </select>
  
  <select id="avgOldUserLossRate4Predict" parameterType="com.hoolai.bi.report.vo.GamePredictionVO" resultMap="PredictionResultMap">
      select avg((old+retention_num-old_d1)/old) as avg_old_user_loss_rate,
             avg(retention_rate) as avg_d1
      from
		(select snid,gameid,day,dau-dnu as old
		 from daily_report
		 <if test="_parameter != null">
			<include refid="PredictionVo_Where_Clause_avg" />
	     </if>
		)a
	 left outer join(
	 	select snid,gameid,install_day,retention_num,retention_rate
		from user_retention_ltv
		<if test="_parameter != null">
			<include refid="PredictionVo_Where_Clause_ltv" />
			and retention_day=1
	     </if>
        )b
	on a.snid=b.snid and a.gameid=b.gameid and a.day=b.install_day
	left outer join(
		select snid,gameid,DATE_SUB(day,INTERVAL 1 DAY) as d_1,dau-dnu as old_d1
		from daily_report
		<if test="_parameter != null">
			<include refid="PredictionVo_Where_Clause_rate" />
	     </if>
	)c
	on a.snid=c.snid and a.gameid=c.gameid and a.day=c.d_1
	where c.snid is not null and old+retention_num-old_d1>0
	group by a.snid,a.gameid
  </select>
  
</mapper>